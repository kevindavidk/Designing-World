/* 
 * ---------------------------------------- *
 * Simple HTML5 Audio Player.min            *
 * JavaScript                               *
 * v1.0.2                              *
 * Matt O'Neill | www.matt-oneill.co.uk     *
 * ---------------------------------------- *
 */

(function (e) { var t = 0; e.fn.audioPlayer = function (r) { return this.each(function () { var i = i || {}; i = { $plr: null, aElem: null, elem: '<audio class="audio-component"><source src="' + r.mp3Src + '" type="audio/mp3"><source src="' + r.oggSrc + '" type="audio/ogg"></audio>' + '<div class="loading">Loading <span class="loader"></span></div>' + '<div class="controls">' + '<span class="play"></span><span class="stop"></span>' + '<div class="audio-progress"><div id="slider" class="audio-slider"><div class="ui-slider-handle"><span class="led"></span><span class="led on"></span><div class="time-display"><span class="elapsed">0:00</span><span class="duration">0:00</span><span class="arrow"></span></div></div><span class="buffered"></span></div></div>' + '<div class="volume-controls"><span class="audio-mute"></span><div class="audio-vol"><div class="ui-slider-handle"><span class="led"></span><span class="led on"></span></div></div></div>' + '<div class="info"><div class="track"><span></span><div class="now-playing"></div></div></div>' + "</div>", s: { SLDR_ANIM_DUR: 200, defVol: 50, pos: 0 }, init: function (e) { !!document.createElement("audio").canPlayType ? i.dom(e) : i.ex(e) }, ex: function (e) { $player.find(".loading").text(navigator.appName + " cannot play audio") }, dom: function (e) { e.append(this.elem); this.$plr = e; this.$plr.attr("data-aP", t++); this.aElem = i.$plr.find(".audio-component")[0]; this.cntlr.lstnrs() }, mdl: { setDefaults: function () { var e = i.mdl.readCke(); if (e != undefined) { i.s.pos = e.pos; i.s.defVol = e.vol; i.mdl.setVol(i.s.defVol); i.vw.cntTme(i.mdl.toTme(i.s.pos, i.aElem.duration)) } if (r.autoPlay) { i.mdl.play() } }, play: function () { this.tmeUpdt(); i.aElem.play() }, pause: function (e) { i.aElem.pause() }, stop: function () { i.aElem.pause(); i.aElem.currentTime = 0; i.vw.prog(0); i.s.pos = 0; i.mdl.ckeUpdte() }, skPrgs: function (e) { i.aElem.currentTime = i.mdl.toTme(e, i.aElem.duration); i.s.pos = e; i.vw.cntTme(i.mdl.toTme(i.s.pos, i.aElem.duration)) }, setVol: function (e) { i.aElem.volume = i.s.defVol = e / 100; i.vw.vol(e); i.s.defVol = e }, mute: function () { i.aElem.muted = i.vw.mte(i.aElem.muted); i.mdl.ckeUpdte() }, tmeUpdt: function () { e(i.aElem).on("timeupdate", function () { i.s.pos = parseInt(i.mdl.pPer(this.currentTime, i.aElem.duration)); i.vw.prog(this.currentTime) }) }, pTme: function (e) { var t = e % (60 * 60), n = Math.floor(t / 60), r = t % 60, i = Math.ceil(r); return i < 10 ? n + ":0" + i : n + ":" + i }, toTme: function (e, t) { var n = e / 100; return t * n }, pPer: function (e, t) { return e / t * 100 + "%" }, readCke: function () { cookies = []; if (document.cookie) { e(document.cookie.split(/; */)).each(function () { var e = this.split("="); var t = new n(e[0], e[1]); cookies.push(t) }) } else { return } for (var t in cookies) { if (cookies[t].name == "aP-" + i.$plr.attr("data-aP")) { return JSON.parse(cookies[t].value) } } }, ckeUpdte: function () { var e = i.$plr.attr("data-aP"), t = { pos: i.s.pos, vol: i.s.defVol }; document.cookie = "aP-" + e + "=" + JSON.stringify(t) }, gtInf: function () { var e = 'Now playing: "' + i.aElem.currentSrc.split("/").pop().split(".")[0] + '"'; var t = { nP: e }; return t } }, vw: { init: function () { i.$plr.children(".loading").fadeOut(250, function () { i.$plr.children(".controls").fadeIn(250); i.$plr.find(".now-playing").text(i.mdl.gtInf().nP) }) }, vol: function (e) { var t = i.$plr.find(".audio-vol"); t.children(".ui-slider-handle").css("left", e + "%"); t.children(".ui-slider-handle").children(".led.on").css("opacity", e / 100); t.children(".ui-slider-range").css("width", e + "%") }, prog: function (e) { i.vw.cntTme(e); i.$plr.find(".audio-slider").children(".ui-slider-handle").css("left", i.mdl.pPer(e, i.aElem.duration)); i.$plr.find(".audio-progress").children(".ui-slider-range").css("width", i.mdl.pPer(e, i.aElem.duration)) }, cntTme: function (e) { i.$plr.find(".elapsed").text(i.mdl.pTme(e)) }, dur: function (e) { i.$plr.find(".duration").text(i.mdl.pTme(i.aElem.duration)) }, mte: function (e) { if (e) { i.$plr.find(".audio-mute").removeClass("muted"); i.vw.vol(i.s.defVol); return false } else { i.$plr.find(".audio-mute").addClass("muted"); i.vw.vol(0); return true } }, plyInctr: function (e) { if (e) { i.$plr.find("span.play").addClass("playing") } else { i.$plr.find("span.play").removeClass("playing") } } }, cntlr: { stcEv: function () { var t = i.$plr.find(".controls"); t.children(".play").on({ click: function () { i.aElem.paused ? i.mdl.play() : i.mdl.pause(); i.mdl.ckeUpdte() } }); t.children(".stop").on({ click: function () { i.mdl.stop() } }); t.children(".volume-controls").children(".audio-mute").on({ click: function () { i.mdl.mute() } }); t.find(".audio-progress").slider({ range: "min", animate: i.s.SLDR_ANIM_DUR, value: i.s.pos, create: function (e) { i.mdl.skPrgs(i.s.pos) }, start: function () { e(i.aElem).off("timeupdate") }, slide: function (e, t) { i.mdl.skPrgs(t.value) }, stop: function () { setTimeout(function () { i.mdl.tmeUpdt(); i.mdl.ckeUpdte() }, i.s.SLDR_ANIM_DUR) } }); t.find(".audio-vol").slider({ range: "min", value: i.s.defVol, start: function (e, t) { }, slide: function (e, t) { i.mdl.setVol(t.value) }, stop: function () { i.mdl.ckeUpdte() } }) }, lstnrs: function () { e(i.aElem).on({ canplay: function () { i.mdl.setDefaults(); i.cntlr.stcEv(); i.vw.dur(); i.vw.init() }, volumechange: function () { }, playing: function () { i.vw.plyInctr(true) }, pause: function () { i.vw.plyInctr(false) }, ended: function () { i.mdl.stop() }, error: function () { alert("An audio player error has occurred") } }) } } }; i.init(e(this)) }) }; var n = function (e, t) { this.name = e; this.value = t } })(jQuery)